{% extends 'layout.html' %}

{% block title %}
Online Channels Connect
{% endblock %}

{% block body %}
{{ channels_dict }}
{{ posts_index }}

<span id="testpost"></span>
<div class="container">
  <div id="post_list">
  </div>
</div>
<div class="container">
  <form>
    <div class="form-group">
      <input id="post_text" type="text" class="form-control" placeholder="Enter you post here" autofocus>
      <button id="btn_post_text" type="button" class="btn btn-primary">Post</button>
    </div>
  </form>
</div>

<script id="posts_template" type="text/x-handlebars-template">
    {% raw -%}
  <div class="channelpost" data-post_index="{{post_dict.index}}">
    <span class="post_user">{{post_dict.user}}</span>
    <span class="post_message">{{post_dict.message}}</span>
    <span class="post_date">{{post_dict.date}}</span>
    <span class="post_time">{{post_dict.time}}</span>
    <button type="button" class="btn btn-primary dpost" data-btnvar="">delete</button>
  </div>
    {%- endraw %}
</script>

<script type="text/javascript">

  document.addEventListener('DOMContentLoaded', () => {

    // check session logged in
    ButtonDisplay("{{session['logged_in']}}");

    // handlebars template
    const post_template = Handlebars.compile(document.querySelector('#posts_template').innerHTML);


    // load previous posts
    // if(String({{ posts_index }} != "False")){
    if("{{ posts_index }}" != "False"){
      const channels_dict = {{channels_dict|safe}};
      for(i in {{ posts_index }}) {
        const post_dict = channels_dict["{{channel}}"]['channel_messages'][i]
        if(post_dict['date'] === datenow()){
          date_now = date_now();
        } else {
          date_now = false;
        }
        document.querySelector('#post_list').innerHTML += post_template({'post_dict' : post_dict, 'date_now' : date_now})
      }
    }

    // connect to websocket
    var channel_socket = io.connect(location.protocol + '//' + document.domain + ':' + location.port);

    // when connected
    channel_socket.on('connect', () => {

      // post button
      document.querySelector('#btn_post_text').onclick = () => {
        const post_text = document.querySelector('#post_text').value;
        channel_socket.emit('submit post', {'post_text' : post_text, 'channel' : "{{ channel }}"});

        // clearing input
        document.querySelector('#post_text').value = "";
        document.querySelector('#post_text').focus();

      };

    });

    // when posted
    channel_socket.on('post list', post_text => {
      // document.querySelector('#testpost').innerHTML = post_text
      post_dict = JSON.parse(post_text)
      if(post_dict['date'] === datenow()){
        date_now = date_now();
      } else {
        date_now = "";
      }
      document.querySelector('#post_list').innerHTML += post_template({'post_dict' : post_dict, 'date_now' : date_now})
    });

    // delete post
    document.querySelectorAll('.dpost').forEach(
      button => {
        button.onclick = () => {
          // backend removal
          const request4 = new XMLHttpRequest();
          request4.open('POST', "/delpost");
          request4.onload = () => {
            button.parentElement.remove();
          }
          const data = new FormData();
          current_post = {
            'channel' : "{{channel}}",
            'post' : button.parentElement.dataset.post_index
          }
          data.append("current_post",current_post);
          request4.send(data);
        }
      }
    );
  });

</script>
{% endblock %}
